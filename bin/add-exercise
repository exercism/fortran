#!/usr/bin/env bash

set -euo pipefail

if [ $# -ne 1 ]; then
    echo "Usage: bin/add-exercise <exercise-slug>"
    exit 1
fi

command -v jq >/dev/null 2>&1 || {
    echo >&2 "jq is required but not installed. Please install it and make sure it's in your PATH."
    exit 1
}
command -v curl >/dev/null 2>&1 || {
    echo >&2 "curl is required but not installed. Please install it and make sure it's in your PATH."
    exit 1
}

bin/fetch-configlet

# Add entry for exercise in config.json
slug="${1}"
name=$(echo "${slug}" | sed 's/\b\w/\u&/g')
uuid=$(bin/configlet uuid)
jq --arg slug "${slug}" --arg uuid "${uuid}" --arg name "${name}" \
    '.exercises.practice += [{slug: $slug, name: $name, uuid: $uuid, practices: [], prerequisites: [], difficulty: 1}]' \
    config.json | sed 's/"average_run_time": 2/"average_run_time": 2.0/' > config.json.tmp && mv config.json.tmp config.json

# Sync the exercise
bin/configlet sync --update --yes --tests include --filepaths --metadata --docs --exercise "${slug}"

if [ $(uname) == "Darwin" ]; then
    os_cache_dir="${HOME}/Library/Caches"
else
    os_cache_dir="${HOME}/.cache"
fi

cache_dir="${os_cache_dir}/exercism/configlet/problem-specifications"

snake_name=$(echo "${slug}" | sed 's/-/_/g')
exercise_dir="exercises/practice/${slug}"
stub_file_path="${exercise_dir}/${snake_name}.f90"
test_file_path="${exercise_dir}/${snake_name}_test.f90"
example_file_path="${exercise_dir}/.meta/example.f90"
canonical_data_file_path="${cache_dir}/exercises/${slug}/canonical-data.json"
cmakelists_file_path="${exercise_dir}/CMakeLists.txt"

touch "${stub_file_path}"
touch "${test_file_path}"
touch "${example_file_path}"

cp config/CMakeLists.txt "${cmakelists_file_path}"

# Update the new exercise files, which includes generating the tests
python3 bin/update-new-exercise-files.py "${slug}" "${snake_name}" "${stub_file_path}" "${test_file_path}" "${example_file_path}" "${canonical_data_file_path}"
